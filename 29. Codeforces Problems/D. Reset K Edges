/* https://codeforces.com/contest/1739/problem/D
  problem tag-  binary search, data structures, 
  dfs and similar, graphs, greedy    

*/


#include<bits/stdc++.h>
#define  ull unsigned long long int
#define ll long long 
#define mod 1000000007
#define all(x) x.begin(),x.end()
#define lb lower_bound
#define ub upper_bound
#define ff first
#define ss second
#define pb push_back
#define Setbit(n)   __builtin_popcountll(n)
#define ms(a,x) memset(a,x,sizeof(a))
#define sp(n,a) cout<<fixed<<setprecision(n)<<a
#define maxa(a,n) *max_element(a,a+n)
#define mina(a,n) *min_element(a,a+n)
#define aca(a,n,x) accumulate(a,a+n,x)
#define pi 3.14159265358979323846
const ll INF=1e15;
const  ll  N=200007;
using namespace std;
int64_t lol;
#define MOD 1e9+7
 

ll check(ll node,ll mid,vector<ll> adj[],ll &currk, vector<ll> &vis){
      vis[node]=1;
      ll mxht=0;
      for(auto child : adj[node]){
         if(!vis[child]){
              ll ht=check(child,mid,adj,currk,vis)+1;
              if(node!=1&&ht>=mid){
                   currk++;
                   ht=0;
               }
               mxht=max(mxht,ht);
         }
      }
      return mxht;

}

void solve(){
ll n,m,k,i,j;
cin>>n>>k;
vector<ll> adj[n+1];

ll x;
for(i=2;i<=n;i++){
    cin>>x;
    adj[x].pb(i);
    adj[i].pb(x);
}


ll lo=1,hi=n-1;
ll ans=1;
while(lo<=hi){
     ll mid=(lo+hi)/2;
     vector<ll> vis(n+1,0);
     ll currk=0;
     check(1,mid,adj,currk,vis);
     
     if(currk<=k){
        ans=mid;
        hi=mid-1;
     }
     else{
        lo=mid+1;
     }
}
cout<<ans<<"\n";





}
int  main(){
 
ios_base::sync_with_stdio(false);
    cin.tie(NULL);cout.tie(NULL);

ll  t;

t=1;
cin>>t;


while(t--){
 
solve();
 
}
return 0;
}
