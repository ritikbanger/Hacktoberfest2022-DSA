class Solution {
public:
    
    int check(int a,int b,vector<vector<char>>& board)
    {
        int x[10]={0};
        for(int i=a;i<a+3;i++)
        {
            for(int j=b;j<b+3;j++)
            {
                if(board[i][j]!='.')
                {x[board[i][j]-'0']++;}
            }
        }
        for(int i=1;i<=9;i++)
        {
            if(x[i]>1)
            {
                return 0;
                break;
            }
        }
        return 1;
    }
    
    bool isValidSudoku(vector<vector<char>>& board) 
    {
        int sure1=1;
        int sure2=1;
        int sure3=1;
        
        for(int i=0;i<9;i+=3)
        {
            for(int j=0;j<9;j+=3)
            {
                int temp = check(i,j,board);
                if(temp==0)
                {
                    return 0;
                }
            }
        }

        for(int i=0;i<9;i++)
        {
            int sure=1,x[10]={0};
            for(int j=0;j<9;j++)
            {
                if(board[i][j]!='.')
                {
                    x[board[i][j]-'0']++;
                }
            }
            for(int k=1;k<=9;k++)
            {
                if(x[k]>1)
                {
                    return 0;
                }
            }
        }
        
        for(int i=0;i<9;i++)
        {
            int sure=1,x[10]={0};
            for(int j=0;j<9;j++)
            {
                if(board[j][i]!='.')
                {
                    x[board[j][i]-'0']++;
                }
            }
            for(int k=1;k<=9;k++)
            {
                if(x[k]>1)
                {
                    return 0;
                }
            }
        }
        
        return 1;
        
    }
};
